{
	"info": {
		"_postman_id": "e6e2f016-abaf-42b4-8554-d3dcecf21593",
		"name": "Postman API",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "46929309"
	},
	"item": [
		{
			"name": "Get Post",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", () => {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://jsonplaceholder.typicode.com\n",
					"protocol": "https",
					"host": [
						"jsonplaceholder",
						"typicode",
						"com\n"
					]
				}
			},
			"response": []
		},
		{
			"name": "New Post",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const jsonData = pm.response.json();\r",
							"pm.test(\"Created successfully\", () => {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"pm.environment.set(\"createdPostId\", jsonData.id);\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"title\": \"API Test\",\r\n  \"body\": \"This is a test\",\r\n  \"userId\": 1\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/posts",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"posts"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Post",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status is 200\", () => {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Check required fields\", () => {\r",
							"    const json = pm.response.json();\r",
							"    pm.expect(json).to.have.property(\"userId\");\r",
							"    pm.expect(json).to.have.property(\"id\");\r",
							"    pm.expect(json).to.have.property(\"title\");\r",
							"    pm.expect(json).to.have.property(\"body\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/posts/1",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"posts",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update Post",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Updated successfully\", () => {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"id\": {{createdPostId}},\r\n  \"title\": \"Updated Title\",\r\n  \"body\": \"Updated Body\",\r\n  \"userId\": 1\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/posts/{{createdPostId}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"posts",
						"{{createdPostId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "DELETE Post",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Deleted successfully\", () => {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/posts/{{createdPostId}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"posts",
						"{{createdPostId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Post Copy",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status is 200\", () => {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Check required fields\", () => {\r",
							"    const json = pm.response.json();\r",
							"    pm.expect(json).to.have.property(\"userId\");\r",
							"    pm.expect(json).to.have.property(\"id\");\r",
							"    pm.expect(json).to.have.property(\"title\");\r",
							"    pm.expect(json).to.have.property(\"body\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/posts/1",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"posts",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "New Post",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Expected failure or unexpected behavior\", () => {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([400, 201]);\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"body\": \"Missing title\",\r\n  \"userId\": 1\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/posts",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"posts"
					]
				}
			},
			"response": []
		}
	]
}